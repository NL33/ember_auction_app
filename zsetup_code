View locally: $ python -m SimpleHTTPServer
view at localhost:8000

Basic Setup:

NOTE: using "additionallibs" (not libs) for better performance

1.	*create auctioner.js
Auctioner = Ember.Application.create()

2.	*router.js
Auctioner.Router.map(function() { 
	this.resource('categories', {path: '/'});  //categories will be home page
});

3.	*store.js:
Auctioner.ApplicationSerializer = DS.LSSerializer.extend(); 
Auctioner.ApplicationAdapter = DS.LSAdapter.extend(); 

4. *add store.js to index.html:
<script src="store.js"></script>

5. *index.html
<script src="auctioner.js"></script>
<script src="router.js"></script>

 <script>
    EmberHandlebarsLoader.loadTemplates(['categories', 'application']);
  </script>

6.	*template/application.hbs
<div class='container'>
  <nav class='navbar navbar-default' role='navigation'>
    <ul class='nav navbar-nav'>
      <li>{{#link-to 'categories'}}Categories Home{{/link-to}}</li>
    </ul>
  </nav>

  {{outlet}}
</div>

7.	*template/categories.hbs
<h1> The Auction Site! </h1>

<ul>
  {{#each category in model}}
    <li>{{#link-to 'category' category}}{{category.name}}{{/link-to}}</li>  //Note: link-to tags here will not work until add individual category functionality
  {{/each}}
</ul>

<p><a href='#' {{action 'sortByName'}}>Sort By Name</a></p>

<p>{{#link-to 'new-category' classNames="btn btn-primary"}}New Category{{/link-to}}</p>
****

***Add basic Categories functionality:***

1.	*Create Categories model:
models/category.js:

Auctioner.Category = DS.Model.extend({    //creates and Ember data model. Then specify the properties of this class:
  name: DS.attr(), 
  //items: DS.hasMany('item', {async: true}) //have to add after creating the 'item' model
});

2. *Add script tag to index.html
<script src="models/category.js"></script>

3. *Add model to the routes:
routes/categories.js:

Auctioner.CategoriesRoute = Ember.Route.extend({
  model: function(){ 
    return this.store.find('category');
  } 
});

4. *load new routes file in index.html:
<script src="routes/categories.js"></script>

****


***Add Ability ability to create categories:***

1. *Add 'new-category' route

router.js: 
  this.resource('new-category');


2. *templates/categories.hbs:

<p>{{#link-to 'new-category' classNames="btn btn-primary"}}New Category{{/link-to}}</p>


3. *create new-category template:
templates/new-category.hbs:

<h1> New Category </h1>

  <form>
    <div class="form-group">
      <label for="name">Name</label>
      {{input value=name id="name" class="form-control"}}
    </div>

    <button class="btn btn-primary" {{action 'save'}}>Save</button>
  </form>


4. *load template into index.html:
 <script>
    EmberHandlebarsLoader.loadTemplates(['categories', 'application', 'new-category'
    ]);
  </script>


5. *define save action in new controller:
controllers/new-category.js:

Auctioner.NewCategoryController = Ember.Controller.extend({  
  actions: {
    save: function() {
     var newCategory = this.store.createRecord('category', {  
      name: this.get('name') 
      }); 
         
         newCategory.save(); 
         this.transitionToRoute('categories'); 
      }
  }
});


6. load new controller into index.html:
<script src="controllers/new-category.js"></script>

****

***Add individual categories ***

1. *router.js:
  this.resource('category', {path: 'categories/:category_id'}); 

2. *routes/category.js
Auctioner.CategoryRoute = Ember.Route.extend({
  model: function(params){ 
    return this.store.find('category', params.category_id); 
});

3. *Add to index.html
<script src="routes/category.js"></script>

4. *create category template
templates/category.hbs:
<h2> Category: </h2>

<h3>{{name}}</h3>

5. *load into index.html:
 <script>
    EmberHandlebarsLoader.loadTemplates(['categories', 'application', 'new-category', 'category'
    ]);
  </script>

6. *If not already, link to category from the home page:
templates/categories.hbs:
<ul>
  {{#each category in model}}
    <li>{{#link-to 'category' category}}{{category.name}}{{/link-to}}</li>
  {{/each}}
</ul>



